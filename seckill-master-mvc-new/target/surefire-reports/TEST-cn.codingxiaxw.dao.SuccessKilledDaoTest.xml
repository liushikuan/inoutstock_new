<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="cn.codingxiaxw.dao.SuccessKilledDaoTest" time="0.005" tests="2" errors="1" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/home/liushikuan/java/jdk1.8.0_131/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.131-b11"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/liushikuan/下载/seckill-master-mvc"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="CN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/liushikuan/下载/seckill-master-mvc"/>
    <property name="java.runtime.version" value="1.8.0_131-b11"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/home/liushikuan/java/jdk1.8.0_131/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.10.0-37-generic"/>
    <property name="user.home" value="/home/liushikuan"/>
    <property name="user.timezone" value="Asia/Shanghai"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="user.name" value="liushikuan"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/home/liushikuan/java/jdk1.8.0_131/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="zh"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_131"/>
    <property name="java.ext.dirs" value="/home/liushikuan/java/jdk1.8.0_131/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/home/liushikuan/java/jdk1.8.0_131/jre/lib/resources.jar:/home/liushikuan/java/jdk1.8.0_131/jre/lib/rt.jar:/home/liushikuan/java/jdk1.8.0_131/jre/lib/sunrsasign.jar:/home/liushikuan/java/jdk1.8.0_131/jre/lib/jsse.jar:/home/liushikuan/java/jdk1.8.0_131/jre/lib/jce.jar:/home/liushikuan/java/jdk1.8.0_131/jre/lib/charsets.jar:/home/liushikuan/java/jdk1.8.0_131/jre/lib/jfr.jar:/home/liushikuan/java/jdk1.8.0_131/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="insertSuccessKilled" classname="cn.codingxiaxw.dao.SuccessKilledDaoTest" time="0"/>
  <testcase name="queryByIdWithSeckill" classname="cn.codingxiaxw.dao.SuccessKilledDaoTest" time="0.005">
    <error message="nested exception is org.apache.ibatis.reflection.ReflectionException: Cannot set value of property &apos;seckill.seckillId&apos; because &apos;seckill.seckillId&apos; is null and cannot be instantiated on instance of cn.codingxiaxw.entity.Seckill. Cause:org.apache.ibatis.reflection.ReflectionException: Error instantiating class cn.codingxiaxw.entity.Seckill with invalid types () or values (). Cause: java.lang.NoSuchMethodException: cn.codingxiaxw.entity.Seckill.&lt;init&gt;()" type="org.mybatis.spring.MyBatisSystemException"><![CDATA[org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Cannot set value of property 'seckill.seckillId' because 'seckill.seckillId' is null and cannot be instantiated on instance of cn.codingxiaxw.entity.Seckill. Cause:org.apache.ibatis.reflection.ReflectionException: Error instantiating class cn.codingxiaxw.entity.Seckill with invalid types () or values (). Cause: java.lang.NoSuchMethodException: cn.codingxiaxw.entity.Seckill.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.apache.ibatis.reflection.factory.DefaultObjectFactory.instantiateClass(DefaultObjectFactory.java:62)
	at org.apache.ibatis.reflection.factory.DefaultObjectFactory.create(DefaultObjectFactory.java:50)
	at org.apache.ibatis.reflection.factory.DefaultObjectFactory.create(DefaultObjectFactory.java:42)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.instantiatePropertyValue(BeanWrapper.java:151)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:135)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyAutomaticMappings(DefaultResultSetHandler.java:438)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:344)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:298)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:273)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:246)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:160)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:78)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:303)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:154)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:102)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:82)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:120)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:113)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	at com.sun.proxy.$Proxy15.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:165)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:69)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy18.queryByIdWithSeckill(Unknown Source)
	at cn.codingxiaxw.dao.SuccessKilledDaoTest.queryByIdWithSeckill(SuccessKilledDaoTest.java:37)
]]></error>
    <system-out><![CDATA[18:15:18.155 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
18:15:18.155 [main] DEBUG org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5443d039] was not registered for synchronization because synchronization is not active
18:15:18.155 [main] DEBUG o.m.s.t.SpringManagedTransaction - JDBC Connection [com.mchange.v2.c3p0.impl.NewProxyConnection@7d1cfb8b] will not be managed by Spring
18:15:18.155 [main] DEBUG c.c.d.S.queryByIdWithSeckill - ==>  Preparing: SELECT sk.seckill_id, sk.user_phone, sk.create_time, sk.state, s.seckill_id "seckill.seckill_id", s.name "seckill.name", s.number "seckill.number", s.start_time "seckill.start_time", s.end_time "seckill.end_time", s.create_time "seckill.create_time" FROM success_killed sk INNER JOIN seckill s ON sk.seckill_id=s.seckill_id WHERE sk.seckill_id=? and sk.user_phone=? 
18:15:18.155 [main] DEBUG c.c.d.S.queryByIdWithSeckill - ==> Parameters: 1000(Long), 13476191877(Long)
18:15:18.164 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5443d039]
]]></system-out>
  </testcase>
</testsuite>